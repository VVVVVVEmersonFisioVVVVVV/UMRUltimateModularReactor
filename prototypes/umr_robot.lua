local hit_effects = require("__base__.prototypes.entity.hit-effects")
local sounds = require("__base__.prototypes.entity.sounds")
local item_sounds = require("__base__.prototypes.item_sounds")

local function sprite(name)
    return '__ultimateCore__/graphics/umr_robot/'..name
end

data:extend({
    {
        name = 'umr_robot_logistic_entity',
        type = 'item',
        icon = sprite('umr_robot_logistic_item.png'),
        icon_size = 64,
        place_result = 'umr_robot_logistic_entity',
        stack_size = 50,
        subgroup = 'umr_item_subgroup_i',
        order = 'c-c',
        inventory_move_sound = item_sounds.robotic_inventory_move,
        pick_sound = item_sounds.robotic_inventory_pickup,
        drop_sound = item_sounds.robotic_inventory_move,
	},
    {
        name = 'umr_robot_logistic_entity',
        type = 'recipe',
        enabled = false,
        ingredients = {
            {type="item", name="copper-plate", amount=50},
            {type="item", name="steel-plate", amount=50},
            {type="item", name="advanced-circuit", amount=50},
            {type="item", name="concrete", amount=50},
            {type="item", name="accumulator", amount=10},
        },
        results = {
            {type="item", name="umr_robot_logistic_entity", amount=1},
        },
        energy_required = 10,
    },
    {
        name = 'umr_robot_logistic_entity',
        type = 'logistic-robot',
        icon = sprite('umr_robot_logistic_item.png'),
        icon_size = 64,
        charging_sound = sounds.robot_charging,
        working_sound = sounds.flying_robot(1),
        flags = {"placeable-player", "player-creation", "placeable-off-grid", "not-on-map"},
        max_health = 1400,
        damaged_trigger_effect = hit_effects.entity(),
        corpse = 'big-remnants',
        collision_box = {{0, 0}, {0, 0}},
        selection_box = {{-1.5, -2.5}, {1.5, 0.5}},
        minable = {
            mining_time = 1,
            result = 'umr_robot_logistic_entity',
        },
        resistances = {
            {
                type = "physical",
                decrease = 10,
                percent = 99
            },
            {
                type = "explosion",
                decrease = 10,
                percent = 99
            },
            {
                type = "acid",
                decrease = 10,
                percent = 99
            },
            {
                type = "fire",
                decrease = 10,
                percent = 99
            }
        },
        max_payload_size = 64,
		speed = 0.3,
		transfer_distance = 0.5,
		max_energy = "96MJ",
		energy_per_tick = "0.05kJ",
		speed_multiplier_when_out_of_energy = 0.2,
		energy_per_move = "5kJ",
		min_to_charge = 0.2,
		max_to_charge = 0.9,
		cargo_centered = {0.0, 0.2},
        idle =
		{
			filename = sprite('umr_robot_logistic_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,			
		},
	idle_with_cargo =
		{
			filename = sprite('umr_robot_logistic_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
        in_motion =
		{
			filename = sprite('umr_robot_logistic_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
	in_motion_with_cargo =
		{
			filename = sprite('umr_robot_logistic_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
        shadow_idle =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
		},
		shadow_in_motion =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
		},
		shadow_idle_with_cargo =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
        },
        shadow_in_motion_with_cargo =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
        },
		smoke =
		{
			filename = "__base__/graphics/entity/smoke-construction/smoke-01.png",
			width = 39,
			height = 32,
			frame_count = 19,
			line_length = 19,
			shift = {0.078125, -0.15625},
			animation_speed = 0.3,
		},
	},
	{
        name = 'umr_robot_construction_entity',
        type = 'item',
        icon = sprite('umr_robot_construction_item.png'),
        icon_size = 64,
        place_result = 'umr_robot_construction_entity',
        stack_size = 50,
        subgroup = 'umr_item_subgroup_i',
        order = 'd-d',
        inventory_move_sound = item_sounds.robotic_inventory_move,
        pick_sound = item_sounds.robotic_inventory_pickup,
        drop_sound = item_sounds.robotic_inventory_move,
    },
    {
        name = 'umr_robot_construction_entity',
        type = 'recipe',
        enabled = false,
        ingredients = {
            {type="item", name="copper-plate", amount=50},
            {type="item", name="steel-plate", amount=50},
            {type="item", name="advanced-circuit", amount=50},
            {type="item", name="concrete", amount=50},
            {type="item", name="accumulator", amount=10},
        },
        results = {
            {type="item", name="umr_robot_construction_entity", amount=1},
        },
        energy_required = 10,
    },
	{
        name = 'umr_robot_construction_entity',
        type = 'construction-robot',
        icon = sprite('umr_robot_construction_item.png'),
        icon_size = 64,
        working_sound = sounds.construction_robot(1),
        charging_sound = sounds.robot_charging,
        flags = {"placeable-player", "player-creation", "placeable-off-grid", "not-on-map"},
        max_health = 1400,
        damaged_trigger_effect = hit_effects.entity(),
        corpse = 'big-remnants',
        collision_box = {{0, 0}, {0, 0}},
        selection_box = {{-1.5, -2.5}, {1.5, 0.5}},
        minable = {
            mining_time = 1,
            result = 'umr_robot_construction_entity',
		},
		working_light = {intensity = 1, size = 5},
        resistances = {
            {
                type = "physical",
                decrease = 10,
                percent = 99
            },
            {
                type = "explosion",
                decrease = 10,
                percent = 99
            },
            {
                type = "acid",
                decrease = 10,
                percent = 99
            },
            {
                type = "fire",
                decrease = 10,
                percent = 99
            }
        },
        max_payload_size = 1,
		speed = 0.3,
		transfer_distance = 0.5,
		max_energy = "192MJ",
		energy_per_tick = "0.05kJ",
		speed_multiplier_when_out_of_energy = 0.2,
		energy_per_move = "5kJ",
		min_to_charge = 0.2,
		max_to_charge = 0.9,
		cargo_centered = {0.0, 0.2},
		construction_vector = {0.30, 0.22},
        idle =
		{
			filename = sprite('umr_robot_construction_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,			
		},
	idle_with_cargo =
		{
			filename = sprite('umr_robot_construction_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
        in_motion =
		{
			filename = sprite('umr_robot_construction_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
	in_motion_with_cargo =
		{
			filename = sprite('umr_robot_construction_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,				
        },
        shadow_idle =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
		},
		shadow_in_motion =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
		},
		working =
		{
			filename = sprite('umr_robot_construction_entity_animation.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			shift = {0,0},
			direction_count = 16,	
		},
		shadow_working =
		{
			filename = sprite('umr_robot_shadow.png'),
			priority = "high",
			line_length = 16,
			width = 256,
			height = 256,
			scale = 0.5,
			frame_count = 1,
			direction_count = 16,
                        shift = util.by_pixel(31.75, 19.75),
			draw_as_shadow = true,
		},
		smoke =
		{
			filename = "__base__/graphics/entity/smoke-construction/smoke-01.png",
			width = 39,
			height = 32,
			frame_count = 19,
			line_length = 19,
			shift = {0.078125, -0.15625},
			animation_speed = 0.3,
		},
	},
  {
    type = "item",
    name = "umr_roboport_entity",
    icon = "__ultimateCore__/graphics/umr_robot/umr_roboport_item.png",
    subgroup = 'umr_item_subgroup_i',
    order = 'b-b',
    place_result = "umr_roboport_entity",
    stack_size = 20,
    inventory_move_sound = item_sounds.reactor_inventory_move,
    pick_sound = item_sounds.reactor_inventory_pickup,
    drop_sound = item_sounds.reactor_inventory_move,
  },
  {
    type = "recipe",
    name = "umr_roboport_entity",
    energy_required = 10,
    enabled = false,
    ingredients = {
            {type="item", name="copper-plate", amount=500},
            {type="item", name="steel-plate", amount=500},
            {type="item", name="advanced-circuit", amount=500},
            {type="item", name="concrete", amount=500},
            {type="item", name="accumulator", amount=100},
            {type="item", name="nuclear-reactor", amount=1},
    },
    results = { { type = "item", name = "umr_roboport_entity", amount = 1 } },
  },
  {
    type = "roboport",
    name = "umr_roboport_entity",
    icon = "__ultimateCore__/graphics/umr_robot/umr_roboport.png",
    flags = { "placeable-neutral", "placeable-player", "player-creation" },
    minable = { mining_time = 1, result = "umr_roboport_entity" },
    collision_box = { { -3.75, -3.38 }, { 3.99, 3.75 } },
    selection_box = { { -4, -4 }, { 4, 4 } },
    logistics_radius = 100,
    construction_radius = 120,
    charge_approach_distance = 5,
    robot_slots_count = 10,
    material_slots_count = 10,
    stationing_offset = { 0, 0 },
charging_offsets = {
  { 3.5, 0.0 }, { 3.5, 0.17 }, { 3.48, 0.34 }, { 3.46, 0.51 },
  { 3.43, 0.68 }, { 3.4, 0.85 }, { 3.35, 1.02 }, { 3.3, 1.18 },
  { 3.23, 1.34 }, { 3.16, 1.5 }, { 3.09, 1.65 }, { 3.0, 1.8 },
  { 2.91, 1.94 }, { 2.81, 2.08 }, { 2.71, 2.22 }, { 2.59, 2.35 },
  { 2.47, 2.47 }, { 2.35, 2.59 }, { 2.22, 2.71 }, { 2.08, 2.81 },
  { 1.94, 2.91 }, { 1.8, 3.0 }, { 1.65, 3.09 }, { 1.5, 3.16 },
  { 1.34, 3.23 }, { 1.18, 3.3 }, { 1.02, 3.35 }, { 0.85, 3.4 },
  { 0.68, 3.43 }, { 0.51, 3.46 }, { 0.34, 3.48 }, { 0.17, 3.5 },
  { 0.0, 3.5 }, { -0.17, 3.5 }, { -0.34, 3.48 }, { -0.51, 3.46 },
  { -0.68, 3.43 }, { -0.85, 3.4 }, { -1.02, 3.35 }, { -1.18, 3.3 },
  { -1.34, 3.23 }, { -1.5, 3.16 }, { -1.65, 3.09 }, { -1.8, 3.0 },
  { -1.94, 2.91 }, { -2.08, 2.81 }, { -2.22, 2.71 }, { -2.35, 2.59 },
  { -2.47, 2.47 }, { -2.59, 2.35 }, { -2.71, 2.22 }, { -2.81, 2.08 },
  { -2.91, 1.94 }, { -3.0, 1.8 }, { -3.09, 1.65 }, { -3.16, 1.5 },
  { -3.23, 1.34 }, { -3.3, 1.18 }, { -3.35, 1.02 }, { -3.4, 0.85 },
  { -3.43, 0.68 }, { -3.46, 0.51 }, { -3.48, 0.34 }, { -3.5, 0.17 },
  { -3.5, 0.0 }, { -3.5, -0.17 }, { -3.48, -0.34 }, { -3.46, -0.51 },
  { -3.43, -0.68 }, { -3.4, -0.85 }, { -3.35, -1.02 }, { -3.3, -1.18 },
  { -3.23, -1.34 }, { -3.16, -1.5 }, { -3.09, -1.65 }, { -3.0, -1.8 },
  { -2.91, -1.94 }, { -2.81, -2.08 }, { -2.71, -2.22 }, { -2.59, -2.35 },
  { -2.47, -2.47 }, { -2.35, -2.59 }, { -2.22, -2.71 }, { -2.08, -2.81 },
  { -1.94, -2.91 }, { -1.8, -3.0 }, { -1.65, -3.09 }, { -1.5, -3.16 },
  { -1.34, -3.23 }, { -1.18, -3.3 }, { -1.02, -3.35 }, { -0.85, -3.4 },
  { -0.68, -3.43 }, { -0.51, -3.46 }, { -0.34, -3.48 }, { -0.17, -3.5 },
  { 0.0, -3.5 }, { 0.17, -3.5 }, { 0.34, -3.48 }, { 0.51, -3.46 },
  { 0.68, -3.43 }, { 0.85, -3.4 }, { 1.02, -3.35 }, { 1.18, -3.3 },
  { 1.34, -3.23 }, { 1.5, -3.16 }, { 1.65, -3.09 }, { 1.8, -3.0 },
  { 1.94, -2.91 }, { 2.08, -2.81 }, { 2.22, -2.71 }, { 2.35, -2.59 },
  { 2.47, -2.47 }, { 2.59, -2.35 }, { 2.71, -2.22 }, { 2.81, -2.08 },
  { 2.91, -1.94 }, { 3.0, -1.8 }, { 3.09, -1.65 }, { 3.16, -1.5 },
  { 3.23, -1.34 }, { 3.3, -1.18 }, { 3.35, -1.02 }, { 3.4, -0.85 },
  { 3.43, -0.68 }, { 3.46, -0.51 }, { 3.48, -0.34 }, { 3.5, -0.17 }
},
    request_to_open_door_timeout = 15,
    spawn_and_station_height = 0,
    energy_source = {
        emissions_per_minute = {
            pollution = 7
        },
        type = 'electric',
        usage_priority = "secondary-input",
        input_flow_limit = "2048MW",
        buffer_capacity = "1GJ"
    },
    energy_usage = "1MW",
    recharge_minimum = "50MJ",
    charging_energy = "16MW",
    max_health = 5250,
    corpse = "nuclear-reactor-remnants",
    damaged_trigger_effect = hit_effects.entity(),
    dying_explosion = "big-explosion",
    radar_visualisation_color = {0.059, 0.092, 0.235, 0.275},
    resistances = {
      { type = "physical", percent = 60 },
      { type = "fire", percent = 80 },
      { type = "impact", percent = 80 },
    },
    open_sound = sounds.machine_open,
    close_sound = sounds.machine_close,
    vehicle_impact_sound = sounds.generic_impact,
    working_sound = {
      sound = {
        audible_distance_modifier = 0.5,
        filename = "__base__/sound/roboport-working.ogg",
        volume = 0.6,
      },
      max_sounds_per_prototype = 3,
      probability = 1 / (5 * 60), -- average pause between the sound is 5 seconds
    },
    open_door_trigger_effect = {
      {
        type = "play-sound",
        sound = {
          filename = "__base__/sound/roboport-door.ogg",
          volume = 0.5,
          min_speed = 1,
          max_speed = 1.5,
        },
      },
    },
    close_door_trigger_effect = {
      {
        type = "play-sound",
        sound = {
          filename = "__base__/sound/roboport-door-close.ogg",
          volume = 0.5,
          min_speed = 1,
          max_speed = 1.5,
        },
      },
    },
    base = {
      layers = {
        {
          filename = sprite('umr_roboport.png'),
          width = 560,
          height = 560,
          shift = { 0, 0.08 },
          scale = 0.5,
        },
        {
          filename = sprite('umr_roboport-sh.png'),
          width = 626,
          height = 426,
          shift = { 1.1, 1.19 },
          draw_as_shadow = true,
          scale = 0.5,
        },
      },
    },
    base_patch = {
      filename = sprite('umr_roboport-patch.png'),
      width = 138,
      height = 112,
      shift = { 0, 0.28 },
      scale = 0.5,
    },
    base_animation = {
      layers = {
        {
          filename = sprite('umr_roboport-animation.png'),
          priority = "medium",
          width = 350,
          height = 286,
          scale = 0.5,
          line_length = 6,
          frame_count = 12,
          shift = { 0, -0.75 },
          draw_as_glow = true,
          animation_speed = 0.1,
        },
        {
          filename = sprite('umr_roboport-animation-light.png'),
          priority = "high",
          width = 350,
          height = 286,
          scale = 0.5,
          line_length = 6,
          frame_count = 12,
          shift = { 0, -0.75 },
          draw_as_light = true,
          animation_speed = 0.1,
        },
      },
    },
    door_animation_up = {
      filename = sprite('umr_roboport-door-up.png'),
      priority = "medium",
      width = 98,
      height = 38,
      scale = 0.5,
      frame_count = 16,
      shift = { 0, -0.86 },
    },
    door_animation_down = {
      filename = sprite('umr_roboport-door-down.png'),
      priority = "medium",
      width = 98,
      height = 36,
      scale = 0.5,
      frame_count = 16,
      shift = { 0, -0.285 },
    },
    recharging_animation = {
      layers = {
        {
          filename = sprite('umr_roboport-recharging.png'),
          priority = "high",
          width = 37,
          height = 35,
          frame_count = 16,
          scale = 1.5,
          draw_as_glow = true,
          animation_speed = 0.5,
        },
        {
          filename = sprite('umr_roboport-recharging-light.png'),
          priority = "high",
          width = 37,
          height = 35,
          frame_count = 16,
          scale = 1.5,
          draw_as_light = true,
          animation_speed = 0.5,
        },
      },
    },
    recharging_light = {
      intensity = 0.2,
      size = 1,
      color = { r = 0.196, g = 0.658, b = 0.650 },
    },
    draw_logistic_radius_visualization = true,
    draw_construction_radius_visualization = true,
    water_reflection = {
      pictures = {
        filename = sprite('umr_roboport-reflection.png'),
        priority = "extra-high",
        width = 60,
        height = 60,
        shift = util.by_pixel(0, 70),
        variation_count = 1,
        scale = 5,
      },
      rotate = false,
      orientation_to_variation = false,
    },
    default_available_logistic_output_signal = { type = "virtual", name = "signal-X" },
    default_total_logistic_output_signal = { type = "virtual", name = "signal-Y" },
    default_available_construction_output_signal = { type = "virtual", name = "signal-Z" },
    default_total_construction_output_signal = { type = "virtual", name = "signal-T" },
    default_roboport_count_output_signal = {type = "virtual", name = "signal-R"},

    circuit_wire_max_distance = 20,
    circuit_connector = circuit_connector_definitions.create_single(
      universal_connector_template, 
      { variation = 33, main_offset = util.by_pixel_hr(56, 80), shadow_offset = util.by_pixel_hr(56, 80), show_shadow = false }
    )
  },
})